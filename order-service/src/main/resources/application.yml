server:
  port: 8060

spring:
  application:
    name: order-service
  datasource:
    url: jdbc:postgresql://${DATASOURCE_HOST:localhost}:5432/order_db
    username: furkan
    password: furkan
    driverClassName: org.postgresql.Driver
  jpa:
    database: postgresql
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    baseline-on-migrate: true
  kafka:
    producer:
      properties:
        spring.json.trusted.packages: com.ecommerce.*
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    template:
      default-topic: order-created

resilience4j:
  circuitbreaker:
    backends:
      payment-service:
        sliding-window-type: count_based
        slidingWindowSize: 6
        registerHealthIndicator: true
        minimumNumberOfCalls: 4
        permittedNumberOfCallsInHalfOpenState: 2
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 20s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10

  retry:
    backends:
      payment-service:
        max-attempts: 2
        wait-duration: 1s


management:
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: always

eureka:
  client:
    service-url:
      defaultZone: http://${EUREKA_HOST:localhost}:8761/eureka
    fetch-registry: true
    register-with-eureka: true
  instance:
    hostname: ${EUREKA_HOST:localhost}

